1、git init 把本地文件夹变成Git仓库
2、git add . 添加新的文件
3、git commit -m "注释内容" 提交
4、git remote add origin "ssh"  本地仓库和远程仓库进行关联
5、git push -u origin master 推送至github

发生冲突：$ git pull --rebase origin master
https://juejin.im/post/5d3685146fb9a07ed064f11b


查看历史版本
git log
回滚
soft 只修改云端
hard 修改本地目录
git reset --hard HEAD^ 回滚上个版本
git reset --hard xxx       回滚指定版本

git diff HEAD -- readme.txt
查看工作区和版本库最新版本区别

1、改乱工作区，丢弃工作区修改   git checkout -- file
2、改乱工作区，并add到暂存区 先执行 git reset HEAD <file> 再执行1
3、已经commit后只能进行版本回退  git reset --hard HEAD^


Creating a new branch is quick
1、git checkout -b dev  创建并切换
2、git branch 查看当前分支
3、git checkout master 切换回master分支  此时如果已经add 并commit后，也会修改工作区文件（即修改本地文件）
4、git branch <name> 创建分支
5、git merge --no-ff <name> 合并某分支到当前分支
6、git branch -d <name> 删除分支

先切换回master 再合并分支,需要禁用fast forward 否则看不到分支历史
git log --graph 图形界面查看分支历史

分支策略
实际开发中，master分支应十分稳定，平时不可在上面干活
在dev分支干活，等到发布1.0再合并到master上
多人合作时创建自己的分支，时不时往dev上合并

